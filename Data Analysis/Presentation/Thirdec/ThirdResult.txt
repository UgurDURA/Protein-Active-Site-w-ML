[ 83  89  83 ...  87 136  76]
[[0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]]
['2.5.1']
Labels Shape
(10000, 207)
LABELS
[[0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]]
DATASET ON TENSOR FLOW EXAMPLE
(<tf.Tensor: shape=(512,), dtype=float64, numpy=
array([ 2., 21., 17.,  7., 16.,  8., 14.,  7.,  5., 23., 14., 22., 10.,
        5., 10.,  9.,  7.,  8., 19., 21., 19., 15., 10.,  9., 10.,  8.,
        7.,  9.,  7., 22., 16., 14., 12., 11., 23., 14., 18., 11., 10.,
       14.,  6.,  8.,  5., 14.,  6., 22.,  5., 12., 18., 14., 16., 17.,
        6., 12.,  8.,  6., 23.,  9., 15.,  8., 23., 12., 15.,  7., 21.,
        8.,  5.,  5., 23.,  7.,  9., 11., 15., 10., 21.,  6., 21.,  8.,
       14., 20., 18., 13.,  8.,  8., 13., 14., 15., 11., 12., 22., 11.,
        7., 20., 14., 14., 10.,  6., 12.,  7., 19., 14., 19., 12., 15.,
       23., 17.,  8.,  5.,  8.,  6.,  5.,  9., 18., 18., 10., 16., 14.,
       11.,  6., 18., 23.,  8., 22.,  5., 14., 13., 17.,  9.,  9., 14.,
        8.,  7.,  6.,  7., 14., 18.,  7.,  5., 21., 19.,  7., 20.,  6.,
       15., 14.,  9., 15.,  9.,  9., 23., 21., 16.,  5., 15., 11., 11.,
        5.,  6., 22., 12.,  5., 17.,  6., 13., 21.,  6., 14.,  5., 13.,
       13., 10.,  7.,  5.,  5., 16., 24.,  5., 13., 16., 14., 10., 12.,
       15., 18.,  8., 15.,  8., 18., 20., 21., 18., 14., 17.,  7.,  6.,
        8., 11., 16.,  8., 13., 11., 22., 15., 11.,  8., 11., 10.,  8.,
       18., 22., 17.,  9., 14., 11., 15.,  5.,  9.,  9., 21., 13., 13.,
        6.,  5., 12.,  9., 18.,  8., 11., 13.,  6.,  8.,  8., 16.,  6.,
       12., 20.,  5., 14.,  9., 14., 15.,  8., 20., 22.,  5., 18., 16.,
       10.,  7., 13., 19.,  8., 11.,  7.,  7., 16., 18.,  7., 14.,  6.,
        7.,  8., 15.,  7., 13., 12., 11., 11.,  8., 14., 15., 20.,  7.,
        7., 24.,  7.,  6., 22.,  7.,  7.,  7.,  6., 19., 10.,  7., 12.,
       14., 20., 15., 12.,  8., 14., 13., 10.,  6.,  6., 20.,  6.,  6.,
       13., 24.,  8.,  6., 12., 10.,  5.,  8., 12.,  6.,  7.,  5., 23.,
       13., 13.,  8.,  5.,  8., 18.,  8., 10., 20.,  6., 11.,  7.,  8.,
        6.,  9., 16.,  5., 10., 11., 10., 11., 19., 15., 20.,  7., 15.,
       10., 18., 12., 15.,  9., 13.,  9.,  5.,  5., 14.,  8.,  8., 22.,
       12., 17., 19., 14.,  5., 13., 16.,  7.,  8., 11.,  8., 13., 14.,
        5., 14.,  5., 12., 12., 16., 11., 20., 18., 12., 15.,  6., 23.,
       20.,  7., 22., 19.,  7., 13., 10.,  9., 19., 16., 24.,  9.,  8.,
       16., 13., 12.,  5.,  8., 19.,  3.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.])>, <tf.Tensor: shape=(512,), dtype=float64, numpy=
array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0.])>, <tf.Tensor: shape=(207,), dtype=float64, numpy=
array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0.])>)
2021-07-13 21:47:42.440722: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:176] None of the MLIR Optimization Passes are enabled (registered 2)
({'input_ids': <tf.Tensor: shape=(512,), dtype=float64, numpy=
array([ 2., 21., 17.,  7., 16.,  8., 14.,  7.,  5., 23., 14., 22., 10.,
        5., 10.,  9.,  7.,  8., 19., 21., 19., 15., 10.,  9., 10.,  8.,
        7.,  9.,  7., 22., 16., 14., 12., 11., 23., 14., 18., 11., 10.,
       14.,  6.,  8.,  5., 14.,  6., 22.,  5., 12., 18., 14., 16., 17.,
        6., 12.,  8.,  6., 23.,  9., 15.,  8., 23., 12., 15.,  7., 21.,
        8.,  5.,  5., 23.,  7.,  9., 11., 15., 10., 21.,  6., 21.,  8.,
       14., 20., 18., 13.,  8.,  8., 13., 14., 15., 11., 12., 22., 11.,
        7., 20., 14., 14., 10.,  6., 12.,  7., 19., 14., 19., 12., 15.,
       23., 17.,  8.,  5.,  8.,  6.,  5.,  9., 18., 18., 10., 16., 14.,
       11.,  6., 18., 23.,  8., 22.,  5., 14., 13., 17.,  9.,  9., 14.,
        8.,  7.,  6.,  7., 14., 18.,  7.,  5., 21., 19.,  7., 20.,  6.,
       15., 14.,  9., 15.,  9.,  9., 23., 21., 16.,  5., 15., 11., 11.,
        5.,  6., 22., 12.,  5., 17.,  6., 13., 21.,  6., 14.,  5., 13.,
       13., 10.,  7.,  5.,  5., 16., 24.,  5., 13., 16., 14., 10., 12.,
       15., 18.,  8., 15.,  8., 18., 20., 21., 18., 14., 17.,  7.,  6.,
        8., 11., 16.,  8., 13., 11., 22., 15., 11.,  8., 11., 10.,  8.,
       18., 22., 17.,  9., 14., 11., 15.,  5.,  9.,  9., 21., 13., 13.,
        6.,  5., 12.,  9., 18.,  8., 11., 13.,  6.,  8.,  8., 16.,  6.,
       12., 20.,  5., 14.,  9., 14., 15.,  8., 20., 22.,  5., 18., 16.,
       10.,  7., 13., 19.,  8., 11.,  7.,  7., 16., 18.,  7., 14.,  6.,
        7.,  8., 15.,  7., 13., 12., 11., 11.,  8., 14., 15., 20.,  7.,
        7., 24.,  7.,  6., 22.,  7.,  7.,  7.,  6., 19., 10.,  7., 12.,
       14., 20., 15., 12.,  8., 14., 13., 10.,  6.,  6., 20.,  6.,  6.,
       13., 24.,  8.,  6., 12., 10.,  5.,  8., 12.,  6.,  7.,  5., 23.,
       13., 13.,  8.,  5.,  8., 18.,  8., 10., 20.,  6., 11.,  7.,  8.,
        6.,  9., 16.,  5., 10., 11., 10., 11., 19., 15., 20.,  7., 15.,
       10., 18., 12., 15.,  9., 13.,  9.,  5.,  5., 14.,  8.,  8., 22.,
       12., 17., 19., 14.,  5., 13., 16.,  7.,  8., 11.,  8., 13., 14.,
        5., 14.,  5., 12., 12., 16., 11., 20., 18., 12., 15.,  6., 23.,
       20.,  7., 22., 19.,  7., 13., 10.,  9., 19., 16., 24.,  9.,  8.,
       16., 13., 12.,  5.,  8., 19.,  3.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.])>, 'attention_mask': <tf.Tensor: shape=(512,), dtype=float64, 
numpy=
array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0.])>}, <tf.Tensor: shape=(207,), dtype=float64, numpy=
array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0.])>)
157
2021-07-13 21:47:44.267011: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cublas64_11.dll
2021-07-13 21:47:45.138172: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cublasLt64_11.dll
2021-07-13 21:47:45.143208: I tensorflow/stream_executor/cuda/cuda_blas.cc:1838] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.
Some layers from the model checkpoint at Rostlab/prot_bert_bfd were not used when initializing TFBertModel: ['mlm___cls', 'nsp___cls']
- This IS expected if you are initializing TFBertModel from the checkpoint of a model trained 
on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing TFBertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
All the layers of TFBertModel were initialized from the model checkpoint at Rostlab/prot_bert_bfd.
If your task is similar to the task the model of the checkpoint was trained on, you can already use TFBertModel for predictions without further training.
WARNING:tensorflow:From C:\Users\Emre\.conda\envs\TensorFlow\lib\site-packages\tensorflow\python\ops\array_ops.py:5043: calling gather (from tensorflow.python.ops.array_ops) with validate_indices is deprecated and will be removed in a future version.
Instructions for updating:
The `validate_indices` argument has no effect. Indices are always validated on CPU and never validated on GPU.
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to

==================================================================================================
input_ids (InputLayer)          [(None, 512)]        0

__________________________________________________________________________________________________
attention_mask (InputLayer)     [(None, 512)]        0

__________________________________________________________________________________________________
bert (TFBertMainLayer)          TFBaseModelOutputWit 419931136   input_ids[0][0]

                                                                 attention_mask[0][0]

__________________________________________________________________________________________________
global_max_pooling1d (GlobalMax (None, 1024)         0           bert[0][0]

__________________________________________________________________________________________________
batch_normalization (BatchNorma (None, 1024)         4096        global_max_pooling1d[0][0]   

__________________________________________________________________________________________________
dense (Dense)                   (None, 1024)         1049600     batch_normalization[0][0]    

__________________________________________________________________________________________________
dropout_91 (Dropout)            (None, 1024)         0           dense[0][0]

__________________________________________________________________________________________________
dense_1 (Dense)                 (None, 256)          262400      dropout_91[0][0]

__________________________________________________________________________________________________
outputs (Dense)                 (None, 207)          53199       dense_1[0][0]

==================================================================================================
Total params: 421,300,431
Trainable params: 1,367,247
Non-trainable params: 419,933,184
__________________________________________________________________________________________________
Epoch 1/10
141/141 [==============================] - 748s 5s/step - loss: 4.1340 - accuracy: 0.1744 - val_loss: 4.2075 - val_accuracy: 0.1629
Epoch 2/10
141/141 [==============================] - 727s 5s/step - loss: 3.4611 - accuracy: 0.2767 - val_loss: 3.5555 - val_accuracy: 0.2449
Epoch 3/10
141/141 [==============================] - 727s 5s/step - loss: 3.0971 - accuracy: 0.3364 - val_loss: 3.0039 - val_accuracy: 0.3781
Epoch 4/10
141/141 [==============================] - 727s 5s/step - loss: 2.9139 - accuracy: 0.3718 - val_loss: 2.6877 - val_accuracy: 0.4078
Epoch 5/10
141/141 [==============================] - 727s 5s/step - loss: 2.7087 - accuracy: 0.4025 - val_loss: 2.4937 - val_accuracy: 0.4262
Epoch 6/10
141/141 [==============================] - 727s 5s/step - loss: 2.5763 - accuracy: 0.4292 - val_loss: 2.4430 - val_accuracy: 0.4652
Epoch 7/10
141/141 [==============================] - 728s 5s/step - loss: 2.4715 - accuracy: 0.4502 - val_loss: 2.3008 - val_accuracy: 0.4764
Epoch 8/10
141/141 [==============================] - 727s 5s/step - loss: 2.3596 - accuracy: 0.4723 - val_loss: 2.1493 - val_accuracy: 0.5072
Epoch 9/10
141/141 [==============================] - 727s 5s/step - loss: 2.2973 - accuracy: 0.4793 - val_loss: 2.2226 - val_accuracy: 0.4939
Epoch 10/10
141/141 [==============================] - 727s 5s/step - loss: 2.2415 - accuracy: 0.4940 - val_loss: 2.0588 - val_accuracy: 0.5133
2021-07-13 23:49:36.389033: W tensorflow/python/util/util.cc:348] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
WARNING:absl:Found untraced functions such as embeddings_layer_call_fn, embeddings_layer_call_and_return_conditional_losses, encoder_layer_call_fn, encoder_layer_call_and_return_conditional_losses, pooler_layer_call_fn while saving (showing 5 of 2585). These functions will not be directly callable after loading.
C:\Users\Emre\.conda\envs\TensorFlow\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:494: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.        
  warnings.warn('Custom mask layers require a config and must override '